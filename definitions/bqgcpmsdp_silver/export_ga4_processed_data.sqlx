config {
  type: "incremental",
  schema: "bqgcpmsdp_silver",
  tags: ["ga4_d1", "ga4_d1_to_processed_incremental"],
  uniqueKey: ["event_hash"],
  description: "Dados brutos de GA4",
  name: "export_ga4_processed_data",
  columns: {
  "event_ingestion_timestamp": "Timestamp de quando ocorreu a ingestão",
  "event_key": "Nome do parâmetro do evento",
  "event_journey": "Nome do produto referente ao evento",
  "event_sala": "Nome do evento padrão GA4",
  "event_postback": "Nome que o evento é enviado à Appsflyer",
  "event_name": "Nome do evento proveniente do tagueamento",
  "ga_session_id": "ID de sessão",
  "id_proposta": "ID de proposta",
  "event_category": "Parâmetro de categoria de evento",
  "event_label": "Parâmetro de label de evento",
  "event_type": "Parâmetro de tipo de evento",
  "event_action": "Parâmetro de acação de evento",
  "product": "Produto",
  "element_name": "Nome do elemento",
  "screen_name": "Nome da tela",
  "virtualpage": "Valor do parâmetro 'virtual page'",
  "page_title": "Parâmetro page_title",
  "fluxo": "Parâmetro de fluxo do evento",
  "path": "Parâmetro de path (caminho) de evento", 
  "location": "Parâmetro de location do evento",
  "cdIndex1": "Parâmetro da custom dimension de evento",
  "cdValue1": "Parâmetro de valor da custom dimension do evento",
  "name": "Parâmetro name da custom dimension do evento",
  "flow": "Parâmetro flow da custom dimension do evento",
  "segment": "Parâmetro segment da custom dimension do evento",
  "session_engaged": "Flag que indica se a sessão é engajada ou não. Uso para cálculo de Bounce Rate",
  "items": "Parâmetro segment da custom dimension do evento de ecommerce",   
  "event_timestamp": "Timestamp de quando o evento foi disparado",
  "platform": "Plataforma onde o evento foi disparado (Android ou iOS)",
  "bundle_identifier": "Identificador do Google referente ao pacote em que os dados chegaram do export",
  "app_version": "Versão do aplicativo",
  "deviceId_or_idfv": "Valor do device_id ou idfv do usuário",
  "manual_campaign_name": "Novo campo de campanha do Google",
  "manual_source": "Novo campo de source do Google",
  "manual_medium": "Novo campo de medium do Google",
  "manual_term": "Novo campo de term do Google",
  "manual_content": "Novo campo de term do Google",
  "region": "Estado de onde o evento ocorreu",
  "event_date": "Data de quando o evento foi disparado",
  "user_id": "ID do usuário",
  "up_user_id": "UserID coletado via user property",
  "user_session_id": "ID de sessao do usuario",
  "appsflyer_id": "AppsflyerId",
  "logged_user": "Flag se o usuário está logado ou não no ambiente",
  "ownership": "Parâmetro ownership da custom dimension do evento",
  "user_pseudo_id": "ID aleatorio gerado pelo google para identificar usuários (logados ou deslogados)"
  },
  bigquery: {
    partitionBy: "event_ingestion_date",
    clusterBy: ["event_name", "event_date", "event_journey"],
    updatePartitionFilter:
        "event_ingestion_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 5 DAY)",
    labels: {
        environment: "prd",
        team: "dataengineer",
        data_processing: "export_processed"
    }
  }
}
WITH export_ga4 AS (
  SELECT 
    TIMESTAMP(DATETIME(CURRENT_TIMESTAMP(), "America/Sao_Paulo")) AS event_ingestion_timestamp,
    DATE(CURRENT_TIMESTAMP(), "America/Sao_Paulo") AS event_ingestion_date,
    TO_HEX(SHA256( 
          COALESCE(event_name , '') || 
          COALESCE(user_id , '') ||
          COALESCE(TO_JSON_STRING(app_info) , '') ||
          COALESCE(TO_JSON_STRING(geo) , '') ||
          COALESCE(event_date , '') || 
          event_timestamp ||
          COALESCE(TO_JSON_STRING(device) , '') ||
          COALESCE(platform , '') ||
          COALESCE(user_pseudo_id , '') ||
          COALESCE(TO_JSON_STRING(event_params) , '') ||
          COALESCE(TO_JSON_STRING(items) , '') ||
          COALESCE(TO_JSON_STRING(collected_traffic_source) , '') ||
          COALESCE(TO_JSON_STRING(user_properties), '')
        )
    ) AS event_hash, 
    event_name,
    user_id,
    app_info,
    geo,
    event_date,
    TIMESTAMP(DATETIME(TIMESTAMP_MICROS(event_timestamp),"America/Sao_Paulo")) AS event_timestamp,
    device,
    platform,
    user_pseudo_id,
    collected_traffic_source,
    event_params,
    items,
    user_properties
  FROM `bradescopf-a0e16.analytics_151569123.events_*`
 WHERE _TABLE_SUFFIX >= FORMAT_DATE('%Y%m%d',DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY))
 AND _TABLE_SUFFIX NOT LIKE '%intraday%'
   AND stream_id NOT IN (
  '7780681544',
  '7653223980',
  '4040298065',
  '3255233300',
  '5360193753',
  '5343043826',
  '1601741320'
  )
),

event_params_tratamento AS (
SELECT
    event_ingestion_timestamp,
    event_ingestion_date,
    event_hash,
    event_name,
    event_timestamp, 
    STRUCT(
      event_params.key AS event_key,

      MAX(IF(LOWER(event_params.key) = 'ga_session_id', IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))               AS ga_session_id,
      MAX(IF(LOWER(event_params.key) = 'id_proposta', IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))                 AS id_proposta,
      MAX(IF(LOWER(event_params.key) = 'event_category', IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))              AS event_category,
      MAX(IF(LOWER(event_params.key) = 'event_label', IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))                 AS event_label,
      MAX(IF(LOWER(event_params.key) = 'event_type', IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))                  AS event_type,

      MAX(IF(REGEXP_CONTAINS(LOWER(event_params.key), 'event_action|tipo_acao|local_acao|action'), IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))              AS event_action,
      MAX(IF(REGEXP_CONTAINS(LOWER(event_params.key), 'product|produto'), IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))                                       AS product,
      MAX(IF(REGEXP_CONTAINS(LOWER(event_params.key), 'element_name|nome_elemento'), IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))                            AS element_name,
      MAX(IF(REGEXP_CONTAINS(LOWER(event_params.key), 'creen.+ame'), IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))                                            AS screen_name,
      MAX(IF(REGEXP_CONTAINS(LOWER(event_params.key), 'virtualpage.+'), IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))                                         AS virtualpage,
      
      MAX(IF(LOWER(event_params.key) = 'location', IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))        AS location,
      MAX(IF(LOWER(event_params.key) = 'page_location', IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))   AS page_location,
      MAX(IF(LOWER(event_params.key) = 'path', IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))            AS path,
      MAX(IF(LOWER(event_params.key) = 'page_title', IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))      AS page_title,
      MAX(IF(LOWER(event_params.key) = 'fluxo', IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))           AS fluxo,  


      MAX(IF(LOWER(event_params.key) = 'cdIndex1', IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))        AS cdIndex1,
      MAX(IF(LOWER(event_params.key) = 'cdValue1', IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))        AS cdValue1,
      MAX(IF(LOWER(event_params.key) = 'name', IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))            AS name,
      MAX(IF(LOWER(event_params.key) = 'flow', IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))            AS flow,
      MAX(IF(LOWER(event_params.key) = 'segment', IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))         AS segment,
      MAX(IF(LOWER(event_params.key) = 'session_engaged', IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL)) AS session_engaged,
      MAX(IF(REGEXP_CONTAINS(LOWER(event_params.key), 'creen.+ame|virtualpage.+|page.+|path|location|path.+'), IFNULL(event_params.value.string_value, CAST(event_params.value.int_value AS STRING)), NULL))  AS other_events
    ) 
      AS event_key_param,
    LOWER(platform)                                                                                                                                       AS platform,
    app_info.id                                                                                                                                           AS bundle_identifier,
    app_info.version                                                                                                                                      AS app_version,
    LOWER((SELECT IF(device.advertising_id IN ('','undefined','00000000-0000-0000-0000-000000000000', NULL), device.vendor_id, device.advertising_id )))  AS deviceId_or_idfv,

    REGEXP_REPLACE(geo.region, r"State of ", "")    AS region,
    PARSE_DATE("%Y%m%d", event_date)                AS event_date,
    user_id,
    IFNULL((SELECT value.string_value FROM UNNEST(user_properties) WHERE REGEXP_CONTAINS(LOWER(key), r"userid")), user_id)          AS up_user_id,
   CONCAT(
        (SELECT value.string_value FROM UNNEST(user_properties) WHERE key = "hashIdBia1"),
        (SELECT value.string_value FROM UNNEST(user_properties) WHERE key = "hashIdBia2")
        ) AS hash_id,
    (SELECT value.int_value FROM UNNEST(user_properties) WHERE REGEXP_CONTAINS(LOWER(key), r"ga_session_id"))                       AS user_session_id,
    (SELECT value.string_value FROM UNNEST(user_properties) WHERE REGEXP_CONTAINS(LOWER(key), r"appsflyer_id"))                     AS appsflyer_id,
    (SELECT IFNULL(CAST(value.int_value AS STRING), value.string_value) FROM UNNEST(user_properties) WHERE key LIKE "logged_user" ) AS logged_user,
    (SELECT IFNULL(CAST(value.int_value AS STRING), value.string_value) FROM UNNEST(user_properties) WHERE key LIKE "ownership" )   AS ownership,

    collected_traffic_source.manual_campaign_name,
    collected_traffic_source.manual_source,
    collected_traffic_source.manual_medium,
    collected_traffic_source.manual_term,
    collected_traffic_source.manual_content,
    LOWER(user_pseudo_id) AS user_pseudo_id,
    items 
  FROM export_ga4, UNNEST(event_params) AS event_params
  GROUP BY
    event_ingestion_timestamp,
    event_ingestion_date,
    event_hash,
    event_name,
    event_timestamp,
    event_params.key,
    platform,
    bundle_identifier,
    app_version,
    deviceId_or_idfv,
    manual_campaign_name,
    manual_source,
    manual_medium,
    manual_term,
    manual_content,
    region,
    event_date,
    user_id,
    up_user_id,
    hash_id,
    user_session_id,
    appsflyer_id,
    logged_user,
    ownership,
    user_pseudo_id,
    items
),

dados_processed AS (
  SELECT
    event_ingestion_timestamp,
    event_ingestion_date,
    event_hash,
    event_name,
    event_key_param,    
    items, 
    event_timestamp,
    platform,
    bundle_identifier,
    app_version,
    deviceId_or_idfv,
    manual_campaign_name,
    manual_source,
    manual_medium,
    manual_term,
    manual_content,
    region,
    event_date,
    user_id,
    up_user_id,
    hash_id,
    user_session_id,
    appsflyer_id,
    logged_user,
    ownership,
    user_pseudo_id
FROM event_params_tratamento
),

event_data AS (
  SELECT
        event_ingestion_timestamp,
        event_ingestion_date,
        event_hash,
        event_key_param.event_key,
        COALESCE(
        `bqgcpmsdp_silver.screen_name_to_event_novo_menu`(event_key_param.path, event_key_param.location, event_key_param.event_action, event_name, event_timestamp),
        `bqgcpmsdp_silver.screen_name_to_event_cartoes`(MAX(event_key_param.other_events) OVER (PARTITION BY event_hash), MAX(event_name)  OVER (PARTITION BY event_hash), MAX(event_key_param.path)  OVER (PARTITION BY event_hash), MAX(event_key_param.name)  OVER (PARTITION BY event_hash), MAX(event_key_param.flow)  OVER (PARTITION BY event_hash), MAX(event_key_param.product)  OVER (PARTITION BY event_hash)),
        `bqgcpmsdp_silver.screen_name_to_event_consignado`(MAX(event_name) OVER (PARTITION BY event_hash), MAX(event_key_param.virtualpage)  OVER (PARTITION BY event_hash), MAX(event_key_param.screen_name) OVER (PARTITION BY event_hash), MAX(event_key_param.event_action) OVER (PARTITION BY event_hash)),
        `bqgcpmsdp_silver.screen_name_to_event_credito_parcelado`(event_key_param.virtualpage, event_key_param.path),
        `bqgcpmsdp_silver.screen_name_to_event_lime`(event_name, event_key_param.other_events),
        `bqgcpmsdp_silver.screen_name_to_event_renegociacao_dividas`(event_key_param.screen_name, event_key_param.path),
        `bqgcpmsdp_silver.screen_name_to_event_abertura_contas_seguro_digital`(event_key_param.name),
        `bqgcpmsdp_silver.screen_name_to_event_abertura_contas_digital`(event_key_param.name),
        `bqgcpmsdp_silver.screen_name_to_event_abertura_contas_previdencia`(event_key_param.name),
        `bqgcpmsdp_silver.screen_name_to_event_abertura_contas_bradesco_bank`(event_key_param.path,event_key_param.location, event_key_param.product),
        `bqgcpmsdp_silver.screen_name_to_event_abertura_contas_debito_automatico`(event_key_param.path,event_key_param.location, event_key_param.product),
        `bqgcpmsdp_silver.screen_name_to_event_abertura_contas_cesta_de_servicos`(event_key_param.name),
        `bqgcpmsdp_silver.screen_name_to_event_abertura_contas_my_account`(event_key_param.path),
        `bqgcpmsdp_silver.screen_name_to_event_bradesco_shop`(event_key_param.name, event_key_param.other_events, event_key_param.product),
        `bqgcpmsdp_silver.screen_name_to_event_institucional`(event_key_param.other_events),
        `bqgcpmsdp_silver.screen_name_to_event_abertura_contas_viva_prime`(event_key_param.other_events),
        `bqgcpmsdp_silver.screen_name_to_event_saque_fgts`(event_key_param.other_events, event_key_param.event_action, event_key_param.event_category, event_key_param.event_label),
        `bqgcpmsdp_silver.screen_name_to_event_consorcio`(MAX(event_name)  OVER (PARTITION BY event_hash), MAX(event_key_param.other_events) OVER (PARTITION BY event_hash), MAX(event_key_param.product) OVER (PARTITION BY event_hash), MAX(event_key_param.name) OVER (PARTITION BY event_hash), MAX(event_key_param.flow) OVER (PARTITION BY event_hash)),
        `bqgcpmsdp_silver.screen_name_to_event_cpinvest`(MAX(event_name) OVER (PARTITION BY event_hash), MAX(event_key_param.screen_name) OVER (PARTITION BY event_hash), MAX(event_key_param.fluxo)  OVER (PARTITION BY event_hash), MAX(event_key_param.element_name)  OVER (PARTITION BY event_hash)),
        `bqgcpmsdp_silver.screen_name_to_event_cdc`(event_key_param.screen_name, event_name,  event_key_param.event_category, event_key_param.event_action, event_key_param.event_label),
        `bqgcpmsdp_silver.screen_name_to_event_reorganizacao_dividas`(event_name, event_key_param.screen_name)
        ) AS event,
        event_name,
        event_key_param.ga_session_id,
        event_key_param.id_proposta,
        event_key_param.event_category,
        event_key_param.event_label,
        event_key_param.event_type,
        event_key_param.event_action,
        event_key_param.product,
        event_key_param.element_name,
        event_key_param.screen_name,
        event_key_param.virtualpage,
        event_key_param.page_location,
        event_key_param.page_title,
        event_key_param.fluxo,
        event_key_param.path,
        event_key_param.location,
        event_key_param.cdIndex1,
        event_key_param.cdValue1,
        event_key_param.name,
        event_key_param.flow,
        event_key_param.segment,
        event_key_param.session_engaged,
        items,     
        event_timestamp,
        platform,
        bundle_identifier,
        app_version,
        deviceId_or_idfv,
        manual_campaign_name,
        manual_source,
        manual_medium,
        manual_term,
        manual_content,
        region,
        event_date,
        user_id,
        hash_id,
        up_user_id,
        user_session_id,
        appsflyer_id,
        logged_user,
        ownership,
        user_pseudo_id,
        event_key_param.other_events
    FROM dados_processed
)
SELECT
  MAX(event_timestamp)  AS event_ingestion_timestamp,
  MAX(DATE(event_timestamp)) AS event_ingestion_date,
  event_hash,
  MAX(event_key)                  AS event_key,
  MAX(event.event_journey)        AS event_journey,
  MAX(event.event_sala)           AS event_sala,
  MAX(event.event_postback)       AS event_postback,
  MAX(event_name)                 AS event_name,
  MAX(ga_session_id)              AS ga_session_id,
  MAX(id_proposta)                AS id_proposta,
  MAX(event_category)             AS event_category,
  MAX(event_label)                AS event_label,
  MAX(event_type)                 AS event_type,
  MAX(event_action)               AS event_action,
  MAX(product)                    AS product,
  MAX(element_name)               AS element_name,

  MAX(screen_name)                AS screen_name,
  MAX(virtualpage)                AS virtualpage,
  MAX(location)                   AS location,
  MAX(page_location)              AS page_location,
  MAX(page_title)                 AS page_title,
  MAX(fluxo)                      AS fluxo,
  MAX(path)                       AS path, 
  MAX(cdIndex1)                   AS cdIndex1,
  MAX(cdValue1)                   AS cdValue1,
  MAX(name)                       AS name,
  MAX(flow)                       AS flow,
  MAX(segment)                    AS segment,
  MAX(session_engaged)            AS session_engaged,
  items,   
  MAX(event_timestamp)            AS event_timestamp,
  MAX(platform)                   AS platform,
  MAX(bundle_identifier)          AS bundle_identifier,
  MAX(app_version)                AS app_version,
  MAX(deviceId_or_idfv)           AS deviceId_or_idfv,
  MAX(manual_campaign_name)       AS manual_campaign_name,
  MAX(manual_source)              AS manual_source,
  MAX(manual_medium)              AS manual_medium,
  MAX(manual_term)                AS manual_term,
  MAX(manual_content)             AS manual_content,
  MAX(region)                     AS region,
  MAX(event_date)                 AS event_date,
  MAX(user_id)                    AS user_id,
  MAX(up_user_id)                 AS up_user_id,
  MAX(user_session_id)            AS user_session_id,
  MAX(appsflyer_id)               AS appsflyer_id,
  MAX(logged_user)                AS logged_user,
  MAX(ownership)                  AS ownership,
  MAX(user_pseudo_id)             AS user_pseudo_id,
  MAX(other_events)               AS other_events,
  MAX(hash_id)                    AS hash_id
FROM event_data
${when(incremental(), `WHERE TRUE`)}
GROUP BY event_hash, items
QUALIFY ROW_NUMBER() OVER (PARTITION BY event_hash ORDER BY event_timestamp DESC) = 1

